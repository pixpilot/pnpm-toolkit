{
  "packages/simple-package/README.md": "# @internal/simple-package

## Usage Add usage instructions here.",
  "packages/simple-package/eslint.config.mjs": "import baseConfig from '@internal/eslint-config/base';

// Uncomment to use the internal ESLint config if available
// /** @type {import('@internal/eslint-config').Config} */
/** @type {import('typescript-eslint').Config} */
export default baseConfig;
",
  "packages/simple-package/package.json": "{
  "name": "@internal/simple-package",
  "type": "module",
  "version": "0.0.0",
  "private": true,
  "packageManager": "pnpm@10.12.2",
  "author": "",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/pixpilot/pnpm-toolkit.git",
    "directory": "packages/simple-package"
  },
  "keywords": [],
  "exports": "./src/index.ts",
  "files": [
    "dist"
  ],
  "scripts": {
    "prepublishOnly": "pnpm run clean && pnpm run build",
    "clean:all": "git clean -xdf .cache .turbo dist node_modules",
    "clean": "git clean -xdf .cache .turbo dist",
    "build": "pnpm run clean && rollup -c",
    "test": "vitest --run --passWithNoTests",
    "test:watch": "vitest --watch",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "typecheck": "tsc --noEmit",
    "lint": "eslint",
    "format": "prettier --check . --ignore-path ../../.gitignore --ignore-path ../../.prettierignore"
  },
  "devDependencies": {
    "@internal/eslint-config": "workspace:*",
    "@internal/prettier-config": "workspace:*",
    "@internal/rollup-config": "workspace:*",
    "@internal/tsconfig": "workspace:*",
    "@internal/vitest-config": "workspace:*",
    "@types/node": "catalog:dev",
    "eslint": "catalog:dev",
    "rimraf": "catalog:dev",
    "rollup": "catalog:dev",
    "typescript": "catalog:dev"
  },
  "prettier": "@internal/prettier-config"
}
",
  "packages/simple-package/rollup.config.js": "import rollupConfig from '@internal/rollup-config';

export default rollupConfig;
",
  "packages/simple-package/src/index.ts": "export * from './main';",
  "packages/simple-package/src/main.ts": "export const name = '@internal/simple-package';",
  "packages/simple-package/test/main.test.ts": "import { describe, expect, it } from 'vitest';

import { name } from '../src';

describe('name', () => {
  it('should be defined', () => {
    expect(name).toBeDefined();
  });
});
",
  "packages/simple-package/tsconfig.build.json": "{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "rootDir": "./src",
    "declaration": true,
    "declarationDir": "./dist",
    "outDir": "./dist"
  },
  "include": ["src"],
  "exclude": ["test/**/*.spec.ts", "test/**/*.test.ts"]
}
",
  "packages/simple-package/tsconfig.json": "{
  "extends": "@internal/tsconfig/base.json",
  "include": ["src/**/*", "test/**/*", "scripts/**/*", "*.config.ts", "*.config.js"]
}
",
  "packages/simple-package/vitest.config.ts": "import baseConfig from '@internal/vitest-config';

export default baseConfig;
",
}